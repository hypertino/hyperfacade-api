#%RAML 1.0 Library
types:
  HFConditional:
    type: object
    properties:
      if?:

  HFWithStages:
    type: object
    properties:
      stages?: string[]

  HFRewriteArguments:
    type: object
    properties:
      location:
      query:
        type: object
        required: false

  HFSetArguments:
    type: HFWithStages
    properties:
      source:
      target?:

  HFFetchArguments:
    type: HFWithStages
    properties:
      location:
      query:
        type: object
        required: false
      expects?:
        enum: [document,collection_link,collection_top,single_item]
      on_error?:
        enum: [fail,remove,default]
      default:
        type: object
        required: false
      selector?:
      always?: boolean
      iterate_on?: string

  HFContextFetchArguments:
    type: object
    properties:
      target:
      location:
      query:
        type: object
        required: false
      expects?:
        enum: [document,collection_link,collection_top,single_item]
      on_error?:
        enum: [fail,remove,default]
      default:
        type: object
        required: false
      selector?:
      iterate_on?: string

  HFError:
    type: HFWithStages
    properties:
      code?: string
      description?: string
      extra?: object

  HFAuthorize:
    type: object
    properties:
      source: string
      mode?:
        enum: [normal,privilege]

  HFAnnotationListItem:
    type: object
    properties:
      remove?: [HFConditional, HFWithStages | nil]
      rewrite?: [HFRewriteArguments, HFConditional]
      forward?: [HFRewriteArguments, HFConditional]
      set?: [HFSetArguments, HFWithStages, HFConditional]
      fetch?: [HFFetchArguments, HFWithStages, HFConditional ]
      context_fetch?: [HFContextFetchArguments, HFConditional]
      extract_item?: [HFConditional | nil]
      authorize?: [HFAuthorize | nil]

      bad_request?: [HFError, HFConditional, HFWithStages | nil]
      unauthorized?: [HFError, HFConditional, HFWithStages | nil]
      payment_required?: [HFError, HFConditional, HFWithStages | nil]
      forbidden?: [HFError, HFConditional, HFWithStages | nil]
      not_found?: [HFError, HFConditional, HFWithStages | nil]
      method_not_allowed?: [HFError, HFConditional, HFWithStages | nil]
      not_acceptable?: [HFError, HFConditional, HFWithStages | nil]
      proxy_authentication_required?: [HFError, HFConditional, HFWithStages | nil]
      request_timeout?: [HFError, HFConditional, HFWithStages | nil]
      conflict?: [HFError, HFConditional, HFWithStages | nil]
      gone?: [HFError, HFConditional, HFWithStages | nil]
      length_required?: [HFError, HFConditional, HFWithStages | nil]
      precondition_failed?: [HFError, HFConditional, HFWithStages | nil]
      request_entity_too_large?: [HFError, HFConditional, HFWithStages | nil]
      request_uri_too_long?: [HFError, HFConditional, HFWithStages | nil]
      unsupported_media_type?: [HFError, HFConditional, HFWithStages | nil]
      requested_range_not_satisfiable?: [HFError, HFConditional, HFWithStages | nil]
      expectation_failed?: [HFError, HFConditional, HFWithStages | nil]
      unprocessable_entity?: [HFError, HFConditional, HFWithStages | nil]
      locked?: [HFError, HFConditional, HFWithStages | nil]
      failed_dependency?: [HFError, HFConditional, HFWithStages | nil]
      too_many_request?: [HFError, HFConditional, HFWithStages | nil]

      internal_server_error?: [HFError, HFConditional, HFWithStages | nil]
      not_implemented?: [HFError, HFConditional, HFWithStages | nil]
      bad_gateway?: [HFError, HFConditional, HFWithStages | nil]
      service_unavailable?: [HFError, HFConditional, HFWithStages | nil]
      gateway_timeout?: [HFError, HFConditional, HFWithStages | nil]
      http_version_not_supported?: [HFError, HFConditional, HFWithStages | nil]
      insufficient_storage?: [HFError, HFConditional, HFWithStages | nil]

  HFAnnotationList: HFAnnotationListItem[]

annotationTypes:
  apply: HFAnnotationList
  remove: [HFConditional | nil]
  rewrite: [HFRewriteArguments, HFConditional]
  forward: [HFRewriteArguments, HFConditional]
  set: [HFSetArguments, HFConditional]
  fetch: [HFFetchArguments, HFConditional ]
  context_fetch: [HFContextFetchArguments, HFConditional]
  extract_item: [HFConditional | nil]
  authorize: [HFAuthorize, HFConditional]

  bad_request: [HFError, HFConditional, HFWithStages | nil]
  unauthorized: [HFError, HFConditional, HFWithStages | nil]
  payment_required: [HFError, HFConditional, HFWithStages | nil]
  forbidden: [HFError, HFConditional, HFWithStages | nil]
  not_found: [HFError, HFConditional, HFWithStages | nil]
  method_not_allowed: [HFError, HFConditional, HFWithStages | nil]
  not_acceptable: [HFError, HFConditional, HFWithStages | nil]
  proxy_authentication_required: [HFError, HFConditional, HFWithStages | nil]
  request_timeout: [HFError, HFConditional, HFWithStages | nil]
  conflict: [HFError, HFConditional, HFWithStages | nil]
  gone: [HFError, HFConditional, HFWithStages | nil]
  length_required: [HFError, HFConditional, HFWithStages | nil]
  precondition_failed: [HFError, HFConditional, HFWithStages | nil]
  request_entity_too_large: [HFError, HFConditional, HFWithStages | nil]
  request_uri_too_long: [HFError, HFConditional, HFWithStages | nil]
  unsupported_media_type: [HFError, HFConditional, HFWithStages | nil]
  requested_range_not_satisfiable: [HFError, HFConditional, HFWithStages | nil]
  expectation_failed: [HFError, HFConditional, HFWithStages | nil]
  unprocessable_entity: [HFError, HFConditional, HFWithStages | nil]
  locked: [HFError, HFConditional, HFWithStages | nil]
  failed_dependency: [HFError, HFConditional, HFWithStages | nil]
  too_many_request: [HFError, HFConditional, HFWithStages | nil]

  internal_server_error: [HFError, HFConditional, HFWithStages | nil]
  not_implemented: [HFError, HFConditional, HFWithStages | nil]
  bad_gateway: [HFError, HFConditional, HFWithStages | nil]
  service_unavailable: [HFError, HFConditional, HFWithStages | nil]
  gateway_timeout: [HFError, HFConditional, HFWithStages | nil]
  http_version_not_supported: [HFError, HFConditional, HFWithStages | nil]
  insufficient_storage: [HFError, HFConditional, HFWithStages | nil]
